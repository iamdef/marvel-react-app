{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelServerService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/skeleton/Skeleton.js","utils/setContent.js","components/pages/SingleItemPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelServerService","useHttp","process","request","clearError","setProcess","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","_transformComics","desc","title","replace","price","prices","language","textObjects","pageCount","getAllCharacters","a","res","data","results","map","getCharacter","getCharacterByName","getAllComics","getComic","useState","useCallback","method","body","headers","fetch","response","ok","Error","status","json","AppBanner","className","avengers","avengersLogo","Skeleton","setContent","Component","itemType","Spinner","View","backLink","comicInfo","content","to","ItemPage","props","getItem","itemId","useParams","item","setItem","useEffect","onRequest","then","onItemLoaded"],"mappings":"iGAAe,UAA0B,kC,OCQ1BA,IANM,WACjB,OACI,qBAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAWC,IAAKC,EAAKC,IAAI,Y,qEC4EhHC,IA9EgB,WAE3B,MAAmDC,cAA5CC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,WAG/BC,EAAsB,SAACC,GACzB,MAAO,CACHC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACXC,YAAaH,EAAKG,YAAL,UAAsBH,EAAKG,YAAYC,MAAM,EAAG,KAAhD,OAA4D,yFACzEC,UAAWL,EAAKK,UAAUC,KAAO,IAAMN,EAAKK,UAAUE,UACtDC,SAAUR,EAAKS,KAAK,GAAGC,IACvBC,KAAMX,EAAKS,KAAK,GAAGC,IACnBE,OAAQZ,EAAKY,OAAOC,MAAMT,MAAM,EAAE,MAQpCU,EAAmB,SAACF,GAAY,IAAD,EAJhBG,EAKjB,MAAO,CACHd,GAAIW,EAAOX,GACXe,MAAOJ,EAAOI,MACdb,YAAaS,EAAOT,aARPY,EASCH,EAAOT,YARlBY,EAAKE,QAAQ,WAAY,IAAIA,QAAQ,aAAc,IAAIA,QAAQ,YAAa,KAAKA,QAAQ,UAAW,MASrG,0BACFZ,UAAWO,EAAOP,UAAUC,KAAO,IAAMM,EAAOP,UAAUE,UAC1DW,MAAON,EAAOO,OAAO,GAAGD,MAAjB,UACEN,EAAOO,OAAO,GAAGD,MADnB,KAED,gBACNE,UAAU,UAAAR,EAAOS,YAAY,UAAnB,eAAuBD,WAAY,QAC7CE,UAAWV,EAAOU,UAAP,UACdV,EAAOU,UADO,OAEjB,6CAgCF,MAAO,CAACC,iBAzBc,uCAAG,4BAAAC,EAAA,sEACH5B,EAAQ,uEADL,cACf6B,EADe,yBAEdA,EAAIC,KAAKC,QAAQC,IAAI7B,IAFP,2CAAH,qDA0Bd8B,aArBU,uCAAG,WAAO5B,GAAP,eAAAuB,EAAA,sEACC5B,EAAQ,sEAAD,OAAuEK,IAD/E,cACXwB,EADW,yBAEhB1B,EAAoB0B,EAAIC,KAAKC,QAAQ,KAFrB,2CAAH,sDAsBVG,mBAjBgB,uCAAG,WAAO5B,GAAP,eAAAsB,EAAA,sEACL5B,EAAQ,8EAAD,OAA+EM,IADjF,cACjBuB,EADiB,yBAEtBA,EAAIC,KAAKC,QAAQC,IAAI7B,IAFC,2CAAH,sDAkBhBgC,aAbU,uCAAG,4BAAAP,EAAA,sEACC5B,EAAQ,mEADT,cACX6B,EADW,yBAEVA,EAAIC,KAAKC,QAAQC,IAAId,IAFX,2CAAH,qDAcVkB,SATM,uCAAG,WAAO/B,GAAP,eAAAuB,EAAA,sEACK5B,EAAQ,kEAAD,OAAmEK,IAD/E,cACPwB,EADO,yBAENX,EAAiBW,EAAIC,KAAKC,QAAQ,KAF5B,2CAAH,sDAUNhC,UACAE,aACAC,gB,6GC1ECJ,EAAU,WACnB,MAA8BuC,mBAAS,WAAvC,mBAAOtC,EAAP,KAAgBG,EAAhB,KA0BA,MAAO,CAACF,QAxBQsC,sBAAW,uCAAC,WAAOxB,GAAP,mCAAAc,EAAA,6DAAYW,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAC,eAAgB,oBAC5FvC,EAAW,WADa,kBAIGwC,MAAM5B,EAAK,CAACyB,SAAQC,OAAMC,YAJ7B,WAIdE,EAJc,QAMNC,GANM,uBAOV,IAAIC,MAAJ,0BAA6B/B,EAA7B,qBAA6C6B,EAASG,SAP5C,yBAUDH,EAASI,OAVR,eAUdjB,EAVc,yBAWbA,GAXa,wCAcpB5B,EAAW,SAdS,+DAAD,sDAkBxB,IAMcD,WAJEqC,uBAAY,WAC3BpC,EAAW,aACZ,IAE0BH,UAASG,gB,+DC7B3B,MAA0B,qCCA1B,MAA0B,0C,OCiB1B8C,IAbG,WACd,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKvD,IAAKwD,EAAUtD,IAAI,aACxB,sBAAKqD,UAAU,mBAAf,mCAC0B,uBAD1B,iBAIA,qBAAKvD,IAAKyD,EAAcvD,IAAI,uB,mECOzBwD,EAjBE,WACb,OACI,qCACI,mBAAGH,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iCCMhBI,IAfI,SAACtD,EAAS+B,EAAMwB,GAA8B,IAAnBC,EAAkB,uDAAP,GACrD,OAAQxD,GACJ,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,UACD,OAAO,cAACyD,EAAA,EAAD,IACX,IAAK,YACD,OAAO,cAACF,EAAD,CAAWC,SAAUA,EAAUzB,KAAMA,IAChD,IAAK,QACD,OAAO,cAAC3C,EAAA,EAAD,IACX,QACI,MAAM,IAAI0D,MAAM,+B,gKC+BtBY,EAAO,SAAC,GAAsB,IAArB3B,EAAoB,EAApBA,KAAMyB,EAAc,EAAdA,SACVhD,EAAsDuB,EAAtDvB,YAAamB,EAAyCI,EAAzCJ,UAAWF,EAA8BM,EAA9BN,SAAUF,EAAoBQ,EAApBR,MAAOb,EAAaqB,EAAbrB,UAC5CiD,EAAwB,UAAbH,EAAuB,UAAY,IAE5CI,EAAyB,UAAbJ,EACd,qCACI,oBAAGN,UAAU,sBAAb,UAAoCvB,EAApC,YACA,oBAAGuB,UAAU,sBAAb,uBAA8CzB,KAC9C,qBAAKyB,UAAU,sBAAf,SAAsC3B,OAExC,KAEN,OACI,sBAAK2B,UAAU,eAAf,UACI,eAAC,IAAD,WACI,sBACI3C,KAAK,cACLsD,QAAO,sCAAiC9B,EAAKV,OAASU,EAAKxB,QAE/D,gCAAQwB,EAAKV,OAASU,EAAKxB,UAE/B,qBAAKZ,IAAKe,EAAWb,IAAKkC,EAAKV,OAASU,EAAKxB,KAAM2C,UAAU,sBAC7D,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCnB,EAAKV,OAASU,EAAKxB,OACvD,mBAAG2C,UAAU,sBAAb,SAAoC1C,IACnCoD,KAEL,cAAC,IAAD,CAAME,GAAIH,EAAUT,UAAU,qBAA9B,6BAKGa,UAnEE,SAACC,GACd,IAIIC,EAJGT,EAAYQ,EAAZR,SACAU,EAAUC,cAAVD,OACP,EAAwB5B,mBAAS,MAAjC,mBAAO8B,EAAP,KAAaC,EAAb,KACA,EAAkEvE,cAA3DuC,EAAP,EAAOA,SAAUH,EAAjB,EAAiBA,aAAclC,EAA/B,EAA+BA,QAASG,EAAxC,EAAwCA,WAAYD,EAApD,EAAoDA,WAIlD+D,EADW,UAAbT,EACYnB,EACAH,EAEZoC,qBAAU,WACNC,EAAUL,KACX,CAACA,IAEJ,IAAMK,EAAY,SAACL,GACfhE,IACA+D,EAAQC,GACHM,KAAKC,GACLD,MAAK,kBAAMrE,EAAW,iBAGzBsE,EAAe,SAACL,GAClBC,EAAQD,IAGZ,OACI,qCACI,cAAC,IAAD,IACCd,YAAWtD,EAASoE,EAAMV,EAAMF","file":"static/js/7.e8e922a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelServerService = () => {\r\n\r\n    const {process, request, clearError, setProcess} = useHttp();\r\n\r\n    // функции приведения данных в удобный вид\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 180)}...` : 'There is no description for this character, so you can tell us all you know about him!',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items.slice(0,10)\r\n        }\r\n    }\r\n\r\n    const prepareDesc = (desc) => {\r\n        return desc.replace('<ul><li>', '').replace('</li></ul>', '').replace('</li><li>', ' ').replace('&rsquo;', '`');\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description\r\n            ? prepareDesc(comics.description)\r\n            : \"There is no description\",\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            price: comics.prices[0].price\r\n                ? `${comics.prices[0].price}$`\r\n                : 'NOT AVAILABLE',\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n            pageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\r\n        }\r\n    }\r\n\r\n    // запрашиваем данные\r\n\r\n    const getAllCharacters = async () => {\r\n        const res = await request('https://iamdef.ru/react-back/marvel-access.php?object=allCharacters');\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`https://iamdef.ru/react-back/marvel-access.php?object=character&id=${id}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`https://iamdef.ru/react-back/marvel-access.php?object=characterByName&name=${name}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getAllComics = async () => {\r\n        const res = await request(`https://iamdef.ru/react-back/marvel-access.php?object=allComics`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`https://iamdef.ru/react-back/marvel-access.php?object=comic&id=${id}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    return {getAllCharacters,\r\n            getCharacter,\r\n            getCharacterByName,\r\n            getAllComics,\r\n            getComic,\r\n            process,\r\n            clearError,\r\n            setProcess\r\n        };\r\n}\r\n\r\nexport default useMarvelServerService;\r\n\r\n\r\n\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess};\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, data, Component, itemType = '') => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component itemType={itemType} data={data}/>;\r\n        case 'error':\r\n            return <ErrorMessage/>\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;","import { useParams, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n// import useMarvelService from '../../services/MarvelService'; для запросов данных напрямую у Marvel\r\nimport useMarvelServerService from '../../services/MarvelServerService'; // для запросов данных через промежуточный сервер\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './singleComicsPage.scss';\r\n\r\nconst ItemPage = (props) => {\r\n    const {itemType} = props;\r\n    const {itemId} = useParams();\r\n    const [item, setItem] = useState(null);\r\n    const {getComic, getCharacter, process, setProcess, clearError} = useMarvelServerService();\r\n    let getItem;\r\n\r\n    itemType === 'comic'\r\n    ? getItem = getComic\r\n    : getItem = getCharacter;\r\n\r\n    useEffect(() => {\r\n        onRequest(itemId);\r\n    }, [itemId]);\r\n\r\n    const onRequest = (itemId) => {\r\n        clearError();\r\n        getItem(itemId)\r\n            .then(onItemLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    const onItemLoaded = (item) => {\r\n        setItem(item);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {setContent(process, item, View, itemType)}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst View = ({data, itemType}) => {\r\n    const {description, pageCount, language, price, thumbnail} = data;\r\n    let backLink = itemType === 'comic' ? '/comics' : '/';\r\n\r\n    const comicInfo = itemType === 'comic' ?\r\n        <>\r\n            <p className=\"single-comic__descr\">{pageCount} pages</p>\r\n            <p className=\"single-comic__descr\">Language: {language}</p>\r\n            <div className=\"single-comic__price\">{price}</div>\r\n        </>\r\n        : null;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`Marvel Information Portal - ${data.title || data.name}`}\r\n                />\r\n                <title>{data.title || data.name}</title>\r\n            </Helmet>\r\n            <img src={thumbnail} alt={data.title || data.name} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{data.title || data.name}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                {comicInfo}\r\n            </div>\r\n            <Link to={backLink} className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemPage;"],"sourceRoot":""}