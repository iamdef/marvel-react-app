{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelServerService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelServerService","useHttp","process","request","clearError","setProcess","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","_transformComics","desc","title","replace","price","prices","language","textObjects","pageCount","getAllCharacters","a","res","data","results","map","getCharacter","getCharacterByName","getAllComics","getComic","useState","useCallback","method","body","headers","fetch","response","ok","Error","status","json","AppBanner","className","avengers","avengersLogo","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","item","i","imgStyle","includes","tabIndex","to","renderItems","disabled","onClick","ComicsPage","Helmet","content"],"mappings":"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","file":"static/js/8.bf428407.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelServerService = () => {\r\n\r\n    const {process, request, clearError, setProcess} = useHttp();\r\n\r\n    // функции приведения данных в удобный вид\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 180)}...` : 'There is no description for this character, so you can tell us all you know about him!',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items.slice(0,10)\r\n        }\r\n    }\r\n\r\n    const prepareDesc = (desc) => {\r\n        return desc.replace('<ul><li>', '').replace('</li></ul>', '').replace('</li><li>', ' ').replace('&rsquo;', '`');\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description\r\n            ? prepareDesc(comics.description)\r\n            : \"There is no description\",\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            price: comics.prices[0].price\r\n                ? `${comics.prices[0].price}$`\r\n                : 'NOT AVAILABLE',\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n            pageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\r\n        }\r\n    }\r\n\r\n    // запрашиваем данные\r\n\r\n    const getAllCharacters = async () => {\r\n        const res = await request('https://iamdef.ru/react-back/marvel-access.php?object=allCharacters');\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`https://iamdef.ru/react-back/marvel-access.php?object=character&id=${id}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`https://iamdef.ru/react-back/marvel-access.php?object=characterByName&name=${name}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getAllComics = async () => {\r\n        const res = await request(`https://iamdef.ru/react-back/marvel-access.php?object=allComics`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`https://iamdef.ru/react-back/marvel-access.php?object=comic&id=${id}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    return {getAllCharacters,\r\n            getCharacter,\r\n            getCharacterByName,\r\n            getAllComics,\r\n            getComic,\r\n            process,\r\n            clearError,\r\n            setProcess\r\n        };\r\n}\r\n\r\nexport default useMarvelServerService;\r\n\r\n\r\n\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess};\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\n// import useMarvelService from '../../services/MarvelService'; для запросов данных напрямую у Marvel\nimport useMarvelServerService from '../../services/MarvelServerService'; // для запросов данных через промежуточный сервер\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './comicsList.scss';\n\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <div className='centerer'><Spinner/></div>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <div className='centerer'><Spinner/></div>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelServerService();\n\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n            initial ? setNewItemLoading(false) : setNewItemLoading(true);\n            getAllComics(offset)\n                .then(onComicsListLoaded)\n                .then(() => setProcess('confirmed'));\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle;\n            (item.thumbnail.includes('image_not_available')) ? imgStyle = {'objectFit': 'unset'} : imgStyle = {'objectFit': 'cover'};\n            return (\n                <li className=\"comics__item\" key={i} tabIndex={0}>\n                    <NavLink to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" style={imgStyle}/>\n                        <div className=\"comics__item-name\" title={item.title}>{item.title.length < 40 ? item.title : `${item.title.slice(0,30)}...`}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </NavLink>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;\n\n","import { Helmet } from \"react-helmet\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"List of Marvel Comics\"\r\n                />\r\n                <title>Comics Page</title>\r\n            </Helmet>\r\n           <AppBanner/>\r\n           <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}